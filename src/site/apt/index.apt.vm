    ------
    Introduction
    ------
    Hendrik Schreiber
    ------
    ------

Introduction

    <FFSampledSP> is a free service provider implementation of the
    {{{http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/package-summary.html}javax.sound.sampled.spi}}
    interfaces. It is part of the {{{http://www.tagtraum.com/sampledsp.html}SampledSP}} collection of
    <<<javax.sound.sampled>>> libraries.

    Its main purpose is to decode audio from various formats at high speed using
    {{{http://www.ffmpeg.org}FFmpeg ${ffmpegversion}}.
    To do so, it uses the {{{http://www.tagtraum.com/ffmpeg/}tagtraum FFmpeg package}}, which offers
    FFmpeg binaries configured to decode audio while avoiding codecs with patent problems. In other words,
    it supports formats like OGG, FLAC, GSM, ... well, while leaving MPEG-4 and MP3 unsupported.
    In order to decode those, please see {{{#Alternatives}alternatives}} below.

    Because <FFSampledSP> depends on native code, you need to add the provided dylib/dll to your
    <<<java.library.path>>> (make sure it's named <<<ffsampledsp.dll>>> or <<<libffsampledsp.dylib>>>) and the
    provided jar to your classpath. Everything else is taken care of automatically.


* Getting Started

    The easiest way to use <FFSampledSP> (other than simply using the
    {{{https://www.beatunes.com/repo/maven2/com/tagtraum/ffsampledsp-java/${projectversion}/ffsampledsp-java-${projectversion}.jar}jar}} and
    {{{https://www.beatunes.com/repo/maven2/com/tagtraum/ffsampledsp-universal/${projectversion}/ffsampledsp-universal-${projectversion}.dylib}dylib}}/
    {{{https://www.beatunes.com/repo/maven2/com/tagtraum/ffsampledsp-x86_64-mingw32/${projectversion}/ffsampledsp-x86_64-mingw32-${projectversion}.dll}64bit-dll}}/
    {{{https://www.beatunes.com/repo/maven2/com/tagtraum/ffsampledsp-i386-mingw32/${projectversion}/ffsampledsp-i386-mingw32-${projectversion}.dll}32bit-dll}})
    is to start a
    {{{http://maven.apache.org/}Maven}} project and introduce a <FFSampledSP> dependency.

    To do so, add something like this to the dependencies section of your pom:

+-------------------------------+
<dependency>
    <groupId>com.tagtraum</groupId>
    <artifactId>ffsampledsp-java</artifactId>
    <version>${projectversion}</version>
    <type>jar</type>
</dependency>

<dependency>
    <groupId>com.tagtraum</groupId>
    <!-- artifact for the OS X universal fat binary -->
    <artifactId>ffsampledsp-universal</artifactId>
    <version>${projectversion}</version>
    <type>dylib</type>
</dependency>

<!-- alternative dependency for 64bit Windows -->
<!--
<dependency>
    <groupId>com.tagtraum</groupId>
    <artifactId>ffsampledsp-x86_64-mingw</artifactId>
    <version>${projectversion}</version>
    <type>dll</type>
</dependency>
-->

<!-- alternative dependency for 32bit Windows -->
<!--
<dependency>
    <groupId>com.tagtraum</groupId>
    <artifactId>ffsampledsp-i386-mingw</artifactId>
    <version>${projectversion}</version>
    <type>dll</type>
</dependency>
-->

<!-- alternative dependency for 64bit OS X -->
<!--
<dependency>
    <groupId>com.tagtraum</groupId>
    <artifactId>ffsampledsp-x86_64-darwin</artifactId>
    <version>${projectversion}</version>
    <type>dylib</type>
</dependency>
-->

<!-- alternative dependency for 32bit OS X -->
<!--
<dependency>
    <groupId>com.tagtraum</groupId>
    <artifactId>ffsampledsp-i386-darwin</artifactId>
    <version>${projectversion}</version>
    <type>dylib</type>
</dependency>
-->
+-------------------------------+


   If Maven can't resolve a dependency, you might also want to add the following
   repository to the repositories section of your pom:

+-------------------------------+
<repository>
    <id>beatunes</id>
    <name>beaTunes Repository</name>
    <url>https://www.beatunes.com/repo/maven2</url>
</repository>
+-------------------------------+

    To use the library, simply use the
    {{{http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/package-summary.html}javax.sound.sampled}}
    classes like you normally would.

* Requirements

    On OS X, <FFSampledSP> requires OS X 10.10 or later and an Intel processor. Both 32 bit and 64 bit are supported.
    On Windows, <FFSampledSP> should run with Windows XP or higher. Both 32 bit and 64 bit are supported.

* Stems Support

    <FFSampledSP> supports {{{http://www.stems-music.com/}Stems}} via a non-standard extension to the original
    Java API. Via {{{./apidocs/com/tagtraum/ffsampledsp/FFAudioFileReader.html#getAudioFileFormats-java.net.URL-}getAudioFileFormats(URL)}}
    you can obtain an array of {{{http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/AudioFileFormat.html}AudioFileFormats}}.
    To open a specific stream, you can call for example <<<new FFAudioFileReader().getAudioInputStream(file, streamIndex);>>>
    In this case, <<<file>>> has to be a <<<File>>> object and <<<streamIndex>>> has to be a valid index. For
    a regular <Stem> file this would be a number \>=0 and \<5. The indices in the audio file format array and in the
    <<<getAudioInputStream(..., index)>>> method correspond to each other.

* Alternatives

    For a cross platform (OS X/Windows) 32 bit service provider based on QuickTime, check out
    {{{http://www.tagtraum.com/qtsampledsp/}QTSampledSP}}.

    For a 32/64 bit service provider implementation for Windows 7 or later, based on Microsoft's Media Foundation,
    check out {{{http://www.tagtraum.com/mfsampledsp/}MFSampledSP}}. This provider also supports a number of
    MPEG-4 formats (MP4, M4A, MOV, etc.) as well as MP3.

    For a service provider based on Apple's CoreAudio, check out {{{http://www.tagtraum.com/casampledsp/}CASampledSP}}.
    This provider also supports many codecs with patent problems.

* Other Java FFmpeg Projects

    There are numerous other Java-FFmpeg projects. Here's the short list, of the projects I'm aware of:

        * {{{http://www.xuggle.com}Xuggle}} - Java wrapper around FFmpeg using JNI.

        * {{{http://code.google.com/p/jjmpeg/}jjmpeg}} - thin Java wrapper around FFmpeg using JNI.

        * {{{http://www.sauronsoftware.it/projects/jave/}JAVE}} - Java wrapper around FFmpeg executables.

        * {{{http://fmj-sf.net/ffmpeg-java/getting_started.php}FFMPEG-Java}} - Java wrapper around FFmpeg,
        using {{{https://github.com/twall/jna}JNA}}. Apparently abandoned in 2007.

        * {{{http://jffmpeg.sourceforge.net/index.html}Jffmpeg}} - Plugins for the Java Media Framework (JMF).
        Apparently abandoned in 2006.

    As far as I am aware, except for the abandoned <Jffmpeg>, all these wrappers require you to learn either
    the FFmpeg API or some other proprietary API.
    Contrary to this, you can use the familiar Java APIs when using <FFSampledSP> or other
    {{{http://www.tagtraum.com/sampledsp.html}SampledSP}} libraries for decoding audio.

* FFmpeg Sources

    You can find the FFmpeg sources used for this package
    {{{https://www.beatunes.com/repo/maven2/com/tagtraum/ffmpeg/ffmpeg/${ffmpegversion}here}}.
